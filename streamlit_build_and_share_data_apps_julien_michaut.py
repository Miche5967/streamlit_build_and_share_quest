# -*- coding: utf-8 -*-
"""Streamlit : build and share data apps Julien Michaut.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1McJPj5HPtaj-F4mFxDZkADRQez06vsLw
"""

# Imports des librairies
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

st.title("Analyses du dataset des \"voitures\"")

## Import des données
df_cars = pd.read_csv(
  "https://raw.githubusercontent.com/murpi/wilddata/master/quests/cars.csv")

# List des régions présentes dans le dataset
list_regions = df_cars.continent.unique()

# Analyses

# Choix des régions à afficher
st.header("Choix des régions à afficher")

# Affichage des checkboxes avec le choix des continents à utiliser pour les analyses
chkbox_Us = st.checkbox(label = "US", value = True)
chkbox_Japan = st.checkbox(label = "Japan", value = True)
chkbox_Europe = st.checkbox(label = "Europe", value = True)

# Définition de la liste des continents à utiliser
list_selected_regions = []
if chkbox_Us:
  list_selected_regions.append(list_regions[0])
elif "US." in list_selected_regions:
  list_selected_regions.remove(list_regions[0])
if chkbox_Europe:
  list_selected_regions.append(list_regions[1])
elif "Europe." in list_selected_regions:
  list_selected_regions.remove(list_regions[1])
if chkbox_Japan:
  list_selected_regions.append(list_regions[2])
elif "Japan." in list_selected_regions:
  list_selected_regions.remove(list_regions[2])
if not list_selected_regions:
  st.write("Aucune région n'est sélectionnée !")

# Analyse de corrélation (heatmap)
st.header("Analyse de corrélation - Heatmap")

# Définition d'un DataFrame avec les continents choisis uniquement
df_cars_to_plot = df_cars.loc[df_cars["continent"].isin(list_selected_regions)]

# Tracé du heatmap
st.subheader("Heatmap")

fig_cars_correlation = sns.heatmap(
  df_cars_to_plot.corr(), cmap = "vlag", center = 0)

st.pyplot(fig_cars_correlation.figure)

# Commentaire
st.write('On observe sur ce heatmap que, peu importe la (les) '\
  'régions sélectionnée(s), les variables les plus corrélées sont :')
st.write('  - "cubinches" et "cylinders",')
st.write('  - "cubinches" et "weightlbs".')

st.write() # Saut de ligne

# Analyse de distribution (histogrammes)
st.header("Analyse de distribution - Histogramme")

# Création de DataFrames pour chaque région
df_cars_us = df_cars.loc[df_cars.continent == list_regions[0]]
df_cars_europe = df_cars.loc[df_cars.continent == list_regions[1]]
df_cars_japan = df_cars.loc[df_cars.continent == list_regions[2]]

# Ajout de "boutons radio" pour le choix de la variable à afficher
radio_variable = st.radio(
    "Quelle variable voulez-vous afficher ?",
    ('mpg', 'cylinders', 'cubic inches', 'hp', 'weight lbs', 'time to 60'))

# Choix de la variable à analyser
if radio_variable == 'mpg':
  x_variable = "mpg"
elif radio_variable == 'cylinders':
  x_variable = "cylinders"
elif radio_variable == 'cubic inches':
  x_variable = "cubicinches"
elif radio_variable == 'hp':
  x_variable = "hp"
elif radio_variable == 'weight lbs':
  x_variable = "weightlbs"
elif radio_variable == 'time to 60':
  x_variable = "time-to-60"

# Tracé des histogrammes
st.subheader("Histogramme")
if list_selected_regions:
  fig, ax = plt.subplots()
  for region in list_selected_regions:
    if region == list_regions[0]:
      sns.histplot(data = df_cars_us, x = x_variable, ax = ax,
                   color = "skyblue", label = list_regions[0], kde = True)
    if region == list_regions[1]:
      sns.histplot(data = df_cars_europe, x = x_variable, ax = ax,
                   color = "lightgreen", label = list_regions[1], kde = True)
    if region == list_regions[2]:
      sns.histplot(data = df_cars_japan, x = x_variable, ax = ax,
                   color = "red", label = list_regions[2], kde = True)
# Affichage de la légende
ax.legend() 
# Tracé
st.pyplot(fig)